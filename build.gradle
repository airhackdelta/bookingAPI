buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
        dependencyManagementVersion = '0.5.2.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:${dependencyManagementVersion}"
        classpath('io.swagger:swagger-codegen:2.2.3')
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'
//apply plugin: 'war'

repositories {
    mavenCentral()
}

jar {
    baseName = 'bookingAPI'
}

import io.swagger.codegen.config.CodegenConfigurator
import io.swagger.codegen.DefaultGenerator

def swaggerInput = file('contract/contract.json')
def swaggerOutputDir = file('build/swagger')
task swaggergen {
    //inputs.file(swaggerInput)
    //outputs.dir(swaggerOutputDir)
    doLast {
        def config = new CodegenConfigurator()

        config.setInputSpec(swaggerInput.path)
        config.setOutputDir(swaggerOutputDir.path)
        config.setLang('spring')

        config.setAdditionalProperties([
                'apiPackage'    : 'com.hackathon.api',
                'modelPackage'  : 'com.hackathon.model',
                'invokerPackage': 'com.hackathon'
        ])

        config.setSystemProperties([
                'apis' : '',
                'interfaceOnly' : 'true',
                'models' : '',
                'apiTests' : 'false',
                'modelTests' : 'false',
                'apiDocs' : 'false',
                'modelDocs' : 'false'
        ])

        new DefaultGenerator().opts(config.toClientOptInput()).generate()
    }
}

task swaggergen_OrderAPI {

    def orderAPISwaggerInput = file('contract/ndc_offer_swagger_v1.2.yaml')
    def orderAPISwaggerOutputDir = file('build/swagger')
    doLast {
        def config = new CodegenConfigurator()

        config.setInputSpec(orderAPISwaggerInput.path)
        config.setOutputDir(orderAPISwaggerOutputDir.path)
        config.setLang('spring')

        config.setAdditionalProperties([
                'modelPackage'  : 'com.hackathon.ndc.order.model',
                'invokerPackage': 'com.hackathon'
        ])

        config.setSystemProperties([
                'apis' : 'false',
                'models' : '',
                'modelTests' : 'false',
                'modelDocs' : 'false'
        ])

        new DefaultGenerator().opts(config.toClientOptInput()).generate()
    }
}

sourceSets {
    main.java.srcDirs = [
            "src/main/java",
            "${buildDir}/swagger/src/main/java"
    ]
}

compileJava.dependsOn('swaggergen', 'swaggergen_OrderAPI')

tasks.withType(JavaExec) {
    if (System.getProperty("DEBUG", 'false') == 'true') {
        jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5006'
    }
}

ext {
    spring_boot_version = '1.5.6.RELEASE'
    jackson_version = '2.9.0'
    jersey_version = '1.18'
    jodatime_version = '2.3'
    junit_version = '4.8.1'
    swaggerVersion = '2.4.0'
}

dependencies {
    compile ("org.springframework.boot:spring-boot-starter-web:$spring_boot_version"){
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    compile('org.springframework.boot:spring-boot-starter-log4j2')

    compile 'io.swagger:swagger-annotations:1.5.16'
    compile 'com.google.code.gson:gson:2.8.1'

    compile "com.sun.jersey:jersey-client:$jersey_version"
    compile "com.sun.jersey.contribs:jersey-multipart:$jersey_version"
    compile "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
    compile "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.8"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:2.1.5"
    compile "joda-time:joda-time:$jodatime_version"
    compile 'io.swagger:swagger-codegen:2.2.3'

    compile "io.springfox:springfox-swagger2:${swaggerVersion}"
    compile "io.springfox:springfox-swagger-ui:${swaggerVersion}"

    compile 'org.json:json:20171018'
}
